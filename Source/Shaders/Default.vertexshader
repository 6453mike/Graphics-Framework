#version 330 core

layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexNormal_modelspace;
layout(location = 2) in vec3 vertexColor_input; 

out vec3 vertexPosition;
out vec3 vertexNormal;
out vec3 vertexColor;

uniform mat4 WorldTransform;
uniform mat4 ViewTransform;
uniform mat4 ProjectionTransform;

void main()
{
	mat4 MV = ViewTransform * WorldTransform;
	mat4 MVP = ProjectionTransform * MV;

	gl_Position =  MVP * vec4(vertexPosition_modelspace,1);

	vertexPosition = vec3(WorldTransform * vec4(vertexPosition_modelspace,1));
	vertexNormal = normalize(vec3(transpose(inverse(WorldTransform)) * vec4(vertexNormal_modelspace, 0)));
	vertexColor = vertexColor_input;
}